@page "/projects"

<PageTitle>Projects</PageTitle>

<div class="container mt-4 pb-3">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h4 class="mb-0">
            Projects
        </h4>

        <Button Type=@ButtonType.Primary
                OnClick=@(() => ShowCreateForm())
                Class="btn btn-primary">
            Create new
        </Button>
    </div>

    <div class="d-flex align-items-center gap-2 mb-3">
        <Search OnSearch=@SearchProjectsByNameAsync
                Placeholder="Search by project name"
                AllowClear
                OnClear=@ClearSearchAsync
                Class="flex-grow-1" />

        <Select DataSource="_sortOptions.AvailableColumns"
                @bind-Value=@_sortOptions.Column
                OnSelectedItemChanged=@((string sortColumn) => SortProjectsByColumnAsync(sortColumn))
                Class="form-select-sm"
                Style="min-width: 150px" />

        <Button @onclick=@ChangeSortOrderAsync class="btn btn-outline-secondary">
            <i class=@OrderButtonIconClass></i>
        </Button>
    </div>

    @if (PagedProjects == null || PagedProjects.Items.Count() == 0)
    {
        <Empty Description=@("You have not added any projects yet") />
    }
    else
    {
        <div class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var project in PagedProjects.Items)
            {
                <div class="col">
                    <div class="card shadow-lg h-100 p-3">
                        <div class="card-body d-flex flex-column">
                            <h5 class="card-title d-flex justify-content-between align-items-center">
                                <NavLink href=@($"/projects/{project.Id}/tasks")
                                         class="text-decoration-none">
                                    @project.Name
                                </NavLink>

                                @if (project.Role?.Name == Roles.Admin)
                                {
                                    <a class="text-danger"
                                       @onclick=@(() => ShowDeleteModal(project.Id, project.Name))>
                                        <i class="bi bi-trash-fill" />
                                    </a>
                                }

                            </h5>

                            <p class="card-text text-muted">
                                <small>
                                    Created by: @project.CreatedByName
                                </small><br />

                                <small>
                                    Created at: @project.CreatedAt.ToShortDateString()
                                </small>
                            </p>
                        </div>
                    </div>
                </div>
            }
        </div>
    }

    <DeleteProjectModal OnConfirm=@(() => Delete(_deleteProjectId))
                        @bind-ProjectName=@_deleteProjectName
                        @bind-Visible=@_deleteModalVisible />

    <ProjectForm @bind-Visible=@_formVisible
                 IsEdit=@_isEdit
                 ProjectModel=@_selectedProjectModel
                 OnProjectSaved=@LoadDataAsync />

    <div class="d-flex justify-content-center mt-4 mb-4">
        <Pagination Class="pagination justify-content-center"
                    Total=@PagedProjects!.TotalCount
                    PageSize=@PagedProjects.PageSize
                    PageSizeOptions=@([3, 6, 9, 12])
                    ShowQuickJumper
                    ShowSizeChanger
                    DefaultPageSize=9
                    DefaultCurrent=1
                    Current=@PagedProjects.CurrentPageNumber
                    OnChange=@OnPageChanged />
    </div>
</div>

