@page "/projects/{projectId:guid}/tasks"

@attribute [Authorize]

<PageTitle>@Title</PageTitle>

<div class="d-flex justify-content-between align-items-center m-4">
    <div class="d-flex align-items-center">
        <NavLink href=@(PageRoutes.ProjectsPage)
                 class="text-dark me-3">
            <i class="bi bi-arrow-left fs-4" />
        </NavLink>

        <NavLink href="@($"/projects/{ProjectId}/settings")"
                 class="text-decoration-none text-dark d-flex justify-content-between align-items-center">
            <h4 class="mb-0">
                @Title
            </h4>

            <i class="bi bi-gear-fill ms-2" />
        </NavLink>
    </div>

    <Button OnClick=@OpenCreateStateForm
            Class="btn btn-outline-secondary">
        Add state
    </Button>
</div>

<div class="mb-3">
    <Search OnSearch=@SearchTasksByNameAsync
            Placeholder="Search by task name"
            AllowClear
            OnClear=@ClearSearchAsync
            Class="w-100" />
</div>

<div class="overflow-auto"
     style="width: 100%;">
    <div class="row g-4 flex-nowrap cards"
         style="min-width: 100%; height: calc(100vh - 250px);">
        @foreach (var state in Project.States)
        {
            <TasksColumn Tasks=@Tasks.Where(t => t.StateId == state.Id).ToList()
                         TaskModel=@TaskModel
                         State=@state
                         ProjectId=@ProjectId
                         OnShowInput=@ShowInput
                         OnOpenDetails=@OpenDetails
                         OnChange=@LoadDataAsync
                         OnOpenUpdateStateForm=@(() => OpenUpdateStateForm(state.Id)) />
        }
    </div>
</div>

<div class="mt-2"
     hidden=@HideInput>
    <Form Model=@TaskModel
          OnFinish=@Submit
          Layout=@FormLayout.Horizontal>
        <FluentValidationValidator />

        <div class="d-flex align-items-stretch"
             style="height: 38px">
            <Button HtmlType="submit"
                    Class="btn btn-outline-secondary me-1 h-100">
                +
            </Button>

            <FormItem class="flex-grow-1">
                <Input Size=@InputSize.Large
                       @ref=@Input
                       @onfocusout=@(() => HideInput = true )
                       @bind-Value=@TaskModel.Name
                       Placeholder="Task name" />
            </FormItem>
        </div>
    </Form>
</div>

<StateForm @bind-Visible=@_stateFormVisible
           ProjectId=@ProjectId
           @bind-StateId=@_selectedStateId
           StateModel=@Project.States.FirstOrDefault(s => s.Id == _selectedStateId)?.ToStateModel()
           OnCreate=@LoadDataAsync />

<TaskDetails TaskId=@_selectedTaskId
             ProjectId=@ProjectId
             @bind-Visible="@_detailsVisible" />
