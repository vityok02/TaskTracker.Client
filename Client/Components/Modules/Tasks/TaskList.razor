@page "/projects/{projectId:guid}/tasks"
@using Domain.Models
@using Domain.Extensions

@attribute [Authorize]

<PageTitle>@Title</PageTitle>

<div class="d-flex justify-content-between align-items-center m-4">
    <div class="d-flex align-items-center">
        <NavLink href=@(PageRoutes.ProjectsPage)
                 class="text-dark me-3">
            <i class="bi bi-arrow-left fs-4" />
        </NavLink>

        <NavLink href="@($"/projects/{ProjectId}/settings")"
                 class="text-decoration-none text-dark">
            <h4 class="mb-0">
                @Title
            </h4>
        </NavLink>
    </div>

    <Button OnClick=@OpenCreateStateForm class="btn btn-outline-secondary">
        Add state
    </Button>
</div>

<div class="overflow-auto" style="width: 100%;">
    <div class="row g-4 flex-nowrap" style="min-width: 100%; height: calc(100vh - 200px);">
        @foreach (var state in Project.States.OrderBy(s => s.Number))
        {
            <TaskColumn Tasks=@Tasks
                        TaskModel=@TaskModel
                        State=@state
                        ProjectId=@ProjectId
                        OnShowInput=@ShowInput
                        OnOpenDetails=@OpenDetials
                        OnChange=@LoadDataAsync
                        OnOpenUpdateStateForm=@(() => OpenUpdateStateForm(state.Id)) />
        }
    </div>
</div>

<div class="mt-2"
     hidden=@HideInput>
    <Form Model=@TaskModel
          OnFinish=@Submit
          Layout=@FormLayout.Horizontal>
        <FluentValidationValidator />

        <div class="d-flex align-items-stretch"
             style="height: 38px">
            <Button HtmlType="submit"
                    Class="btn btn-outline-secondary me-1 h-100">
                +
            </Button>

            <FormItem class="flex-grow-1">
                <Input Size=@InputSize.Large
                       @ref="@Input"
                       @onfocusout="@(() => HideInput = true)"
                       @bind-Value="@TaskModel.Name"
                       Placeholder="Task name" />
            </FormItem>
        </div>
    </Form>
</div>

<StateForm @bind-Visible=@_stateFormVisible
           ProjectId=@ProjectId
           @bind-StateId=@_selectedStateId
           StateModel=@Project.States.FirstOrDefault(s => s.Id == _selectedStateId)?.ToStateModel()
           OnCreate=@LoadDataAsync />

<TaskDetails TaskId=@SelectedTaskId
             ProjectId=@ProjectId
             @bind-Visible="@_detailsVisible" />
