@if (Task is null)
{
    return;
}

<Drawer @bind-Visible=@Visible
        Width="900px"
        OnClose=@Close
        Style="height: 100%;">

    <div class="d-flex flex-column" style="height: 100%; min-height: 0;">
        <div class="mb-3">
            @if (IsNameInput)
            {
                <Form Model=@TaskModel
                      OnFinish=@Update
                      Class="w-100 d-flex align-items-center gap-2"
                      ValidateOnChange>
                    <FluentValidationValidator />

                    <Input @bind-Value=@TaskModel.Name
                           Class="form-control" />

                    <Button HtmlType="button"
                            OnClick=@HideNameInput
                            Class="btn btn-secondary btn-sm">
                        Cancel
                    </Button>

                    <Button HtmlType="submit"
                            Class="btn btn-primary btn-sm">
                        Save
                    </Button>
                </Form>
            }
            else
            {
                <div class="d-flex justify-content-between align-items-center">
                    <h3 class="m-0">@Task.Name</h3>
                    <Button OnClick=@ShowNameInput
                            Class="btn btn-primary btn-sm">
                        Edit
                    </Button>
                </div>
            }
        </div>

        <Divider Class="my-0" />

        <div class="d-flex flex-grow-1 pt-2" style="min-height: 0;">
            <div class="w-75" style="overflow-y: auto; min-height: 0;">
                <TaskComments ProjectId=@ProjectId TaskId=@TaskId />
            </div>

            <Divider Type=@DividerType.Vertical Class="h-100" />

            <div class="w-50 ps-2" style="overflow: hidden;">
                <div class="mb-3">
                    <Form Model=@TaskModel
                          OnFinish=@Update
                          OnFieldChanged=@CheckForChanges
                          ValidateOnChange>
                        <FluentValidationValidator />

                        <FormItem>
                            <TextArea @bind-Value=@TaskModel.Description
                                      Class="form-control mb-2"
                                      Rows="3" />
                        </FormItem>

                        <div class="d-flex flex-column mt-3">
                            <FormItem Label="Start date" LabelStyle="width:80px">
                                <DatePicker @bind-Value=@TaskModel.StartDate Placeholder=@("Set start date...") />
                            </FormItem>

                            <FormItem Label="End date" LabelStyle="width:80px">
                                <DatePicker @bind-Value=@TaskModel.EndDate Placeholder=@("Set end date...") />
                            </FormItem>
                        </div>

                        <Button Disabled=@(!HasChanges)
                                Class="btn btn-secondary btn-sm"
                                @onclick=@ResetChanges>
                            Cancel
                        </Button>

                        <Button HtmlType="submit"
                                Disabled=@(!HasChanges)
                                Class="btn btn-primary btn-sm">
                            Save
                        </Button>
                    </Form>
                </div>

                <div class="border p-3 bg-white rounded">
                    <div class="mb-2">
                        <span class="fw-bold">State: </span>
                        @Task!.StateName
                    </div>

                    <div class="mb-2">
                        <span class="fw-bold">Created by: </span>
                        @Task.CreatedByName
                    </div>

                    <div class="mb-2">
                        <span class="fw-bold">Created at: </span>
                        @Task.CreatedAt
                    </div>

                    @if (Task.UpdatedBy is not null)
                    {
                        <div class="mb-2">
                            <span class="fw-bold">Updated by: </span>
                            @Task.UpdatedByName
                        </div>

                        <div class="mb-2">
                            <span class="fw-bold">Updated at: </span>
                            @Task.UpdatedAt
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</Drawer>
