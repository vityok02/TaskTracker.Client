<HeadContent>
    <style>
        .ant-select-selection-overflow {
            display: none !important;
        }
    </style>
</HeadContent>

@if (Task is null)
{
    return;
}

<Drawer @bind-Visible=@Visible
        Width="850px"
        OnClose=@Close
        Style="height: 100%;">

    <div class="d-flex flex-column" style="height: 100%; min-height: 0;">
        <div class="mb-3">
            <RoleAuthorizeView AllowedRoles=@([Roles.Admin, Roles.Contributor])>
                <Allowed>
                    @if (IsNameInput)
                    {
                        <Form Model=@TaskModel
                              OnFinish=@Update
                              Class="w-100 d-flex align-items-center gap-2"
                              ValidateOnChange>
                            <FluentValidationValidator />

                            <Input @bind-Value=@TaskModel.Name
                                   Class="form-control" />

                            <Button HtmlType="button"
                                    OnClick=@HideNameInput
                                    Class="btn btn-secondary btn-sm">
                                Cancel
                            </Button>

                            <Button HtmlType="submit"
                                    Class="btn btn-primary btn-sm">
                                Save
                            </Button>
                        </Form>
                    }
                    else
                    {
                        <div class="d-flex justify-content-between align-items-center">
                            <h3 class="m-0">@Task.Name</h3>

                            <a @onclick=@ShowNameInput>
                                <i class="bi bi-pencil-square"></i>
                            </a>
                        </div>
                    }
                </Allowed>

                <NotAllowed>
                    <h3 class="m-0">@Task.Name</h3>
                </NotAllowed>
            </RoleAuthorizeView>
        </div>

        <Divider Class="my-0" />

        <div class="d-flex flex-grow-1 pt-2" style="min-height: 0;">
            <div class="w-75" style="overflow-y: auto; min-height: 0;">
                <TaskComments ProjectId=@ProjectId TaskId=@TaskId />
            </div>

            <Divider Type=@DividerType.Vertical Class="h-100" />

            <div class="ps-2" style="overflow: hidden; width: 300px;">
                <div class="mb-2">
                    <label>Description</label>

                    <RoleAuthorizeView AllowedRoles=@([Roles.Admin, Roles.Contributor])>
                        <Allowed>
                            <Form Model=@TaskModel
                                  OnFinish=@Update
                                  OnFieldChanged=@CheckForChanges
                                  ValidateOnChange>
                                <FluentValidationValidator />

                                <FormItem>
                                    <TextArea @bind-Value=@TaskModel.Description
                                              Class="form-control mb-2"
                                              Rows="3" />
                                </FormItem>

                                <div class="d-flex flex-column mt-2">
                                    <FormItem Label="Start date" LabelStyle="width:80px" Class="mb-2">
                                        <DatePicker @bind-Value=@TaskModel.StartDate Placeholder=@("Set start date...") />
                                    </FormItem>

                                    <FormItem Label="End date" LabelStyle="width:80px" Class="mb-2">
                                        <DatePicker @bind-Value=@TaskModel.EndDate Placeholder=@("Set end date...") />
                                    </FormItem>
                                </div>

                                <div class="d-flex gap-1 justify-content-end">
                                    <Button Disabled=@(!HasChanges)
                                            Class="btn btn-secondary btn-sm"
                                            @onclick=@ResetChanges>
                                        Cancel
                                    </Button>

                                    <Button HtmlType="submit"
                                            Disabled=@(!HasChanges)
                                            Class="btn btn-primary btn-sm">
                                        Save
                                    </Button>
                                </div>
                            </Form>
                        </Allowed>
                        <NotAllowed>
                            <div class="mb-2">
                                <TextArea Value=@TaskModel.Description
                                          Class="form-control mb-2"
                                          Rows="3"
                                          ReadOnly />
                            </div>

                            <div class="d-flex flex-column mt-3">
                                <div class="mb-2 d-flex align-items-center">
                                    <label class="me-2" style="width:80px;">Start date</label>
                                    <DatePicker Value="@TaskModel.StartDate" Disabled=@true />
                                </div>

                                <div class="d-flex align-items-center">
                                    <label class="me-2" style="width:80px;">End date</label>
                                    <DatePicker Value="@TaskModel.EndDate" Disabled=@true />
                                </div>
                            </div>

                        </NotAllowed>
                    </RoleAuthorizeView>
                </div>

                <Divider Class="my-2" />

                <div>
                    <div class="mb-2">
                        <span class="fw-bold">State: </span>
                        <span class="rounded-5 px-2 py-1"
                              style="@StylesHelper.GetStateStyle(Task.StateColor)">
                            @Task!.StateName
                        </span>
                    </div>

                    <div class="mb-2">
                        <span class="fw-bold">Created by: </span>
                        @Task.CreatedByName
                    </div>

                    <div class="mb-2">
                        <span class="fw-bold">Created at: </span>
                        @Task.CreatedAt.ToShortDateString()
                    </div>

                    @if (Task.UpdatedBy is not null)
                    {
                        <div class="mb-2">
                            <span class="fw-bold">Updated by: </span>
                            @Task.UpdatedByName
                        </div>

                        <div class="mb-2">
                            <span class="fw-bold">Updated at: </span>
                            @Task.UpdatedAt?.ToShortDateString()
                        </div>
                    }
                </div>

                <Divider Class="my-2" />

                <div class="d-flex flex-column mt-2">
                    <div class="d-flex justify-content-between">
                        <label>
                            Tags:
                        </label>
                        <Dropdown Trigger=@(new Trigger[] { Trigger.Click })
                                  Placement=@Placement.LeftTop
                                  ComplexAutoCloseAndVisible=@false
                                  OverlayStyle="max-width: 200px;">
                            <Overlay>
                                <Menu Class="px-2 py-3 rounded-3">
                                    <Search @bind-Value=@SearchTerm
                                            AllowClear
                                            OnClear=@ClearSearch
                                            DebounceMilliseconds=0
                                            Placeholder="Search tags..."
                                            BindOnInput />

                                    <Divider Class="my-2" />

                                    <div style="max-height: 400px;">
                                        @foreach (var tag in FilteredTags)
                                        {
                                            var isSelected = Task.Tags.Any(t => t.Id == tag.Id);

                                            <div class="user-select-none" style=@StylesHelper.GetTagMenuElementStyle(tag.Color, isSelected)
                                                 @onclick=@(async () => await HandleTagSelectionAsync(tag))>
                                                @if (isSelected)
                                                {
                                                    <i class="bi bi-check2"></i>
                                                }
                                                @tag.Name

                                            </div>
                                        }
                                    </div>
                                </Menu>
                            </Overlay>
                            <ChildContent>
                                <Button>
                                    Select tags <Icon Type="@IconType.Outline.Down" />
                                </Button>
                            </ChildContent>
                        </Dropdown>
                    </div>

                    <div class="d-flex flex-row gap-1 flex-wrap mt-2">
                        @foreach (var tag in Task.Tags)
                        {
                            <div class="tag"
                                 style=@StylesHelper.GetTagStyle(tag.Color)>
                                @tag.Name
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</Drawer>
