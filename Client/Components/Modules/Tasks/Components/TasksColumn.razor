<div class="col-12 col-lg-4"
     style="max-width: 350px;">
    <div class="card shadow-sm h-100 d-flex flex-column">
        <div class="card-body d-flex flex-column flex-grow-1"
             style=@($"background: {State.Color}30")>
            <div class="d-flex align-items-center justify-content-between">
                <h5 class="card-title mt-1 ms-2 user-select-none">
                    @State.Name
                </h5>

                <RoleAuthorizeView AllowedRoles=@([Roles.Admin, Roles.Contributor])>
                    <Dropdown Trigger=@(new Trigger[] { Trigger.Click })>
                        <Overlay>
                            <Menu>
                                <MenuItem OnClick=@OpenUpdateStateForm>
                                    Edit
                                </MenuItem>

                                <MenuItem OnClick=@(async () => await ShowStateDeleteConfirmAsync(State.Id))>
                                    Delete
                                </MenuItem>
                            </Menu>
                        </Overlay>

                        <ChildContent>
                            <a @onclick:preventDefault>
                                <i class="bi bi-three-dots" />
                            </a>
                        </ChildContent>
                    </Dropdown>
                </RoleAuthorizeView>
            </div>

            <div class="task-card col d-flex flex-column flex-grow-1 overflow-auto"
                 style="max-height: 350px;">
                <Dropzone AllowsDrag=@(t => AllowsDrag())
                          Items=@Tasks
                          TItem="TaskDto"
                          OnItemDrop=@((task) => OnDrop(task, Tasks))
                          Class="h-100 d-flex flex-column flex-grow-1">
                    <ChildContent>

                        <div class="card shadow-sm flex-grow-1">
                            <div class="card-body d-flex justify-content-between align-items-center">
                                <a @onclick="@(async () => await OpenDetailsAsync(context.Id))"
                                   class="text-decoration-none text-dark">
                                    @context.Name
                                </a>

                                <RoleAuthorizeView AllowedRoles=@([Roles.Admin, Roles.Contributor])>
                                    <Dropdown Trigger="@(new Trigger[] { Trigger.Click })">
                                        <Overlay>
                                            <Menu>
                                                <MenuItem OnClick="@(async () => await OpenDetailsAsync(context.Id))">
                                                    Details
                                                </MenuItem>

                                                <MenuItem OnClick=@(async () => await ShowTaskDeleteConfirmAsync(context.Id))>
                                                    Delete
                                                </MenuItem>
                                            </Menu>
                                        </Overlay>

                                        <ChildContent>
                                            <a @onclick:preventDefault>
                                                <i class="bi bi-three-dots" />
                                            </a>
                                        </ChildContent>
                                    </Dropdown>
                                </RoleAuthorizeView>
                            </div>
                        </div>
                    </ChildContent>
                </Dropzone>
            </div>

            <RoleAuthorizeView AllowedRoles=@([Roles.Admin, Roles.Contributor])>
                <Button OnClick=@(async () => await ShowInputAsync(State.Id))
                        Class="btn bg-transparent border-0 w-100 mt-auto">
                    Add item
                </Button>
            </RoleAuthorizeView>
        </div>
    </div>
</div>